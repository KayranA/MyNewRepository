<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="9" failed="2" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-10T20:23:29 IST" name="Suite" finished-at="2022-03-10T20:23:39 IST" duration-ms="9467">
    <groups>
    </groups>
    <test started-at="2022-03-10T20:23:29 IST" name="ChromeTest" finished-at="2022-03-10T20:23:30 IST" duration-ms="162">
      <class name="acti123.TestClassNG">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:29 IST" name="openBrowser" finished-at="2022-03-10T20:23:30 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="objectOfMethods()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="objectOfMethods" finished-at="2022-03-10T20:23:30 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectOfMethods -->
        <test-method is-config="true" signature="logInToActiTime()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="logInToActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "this.driver" is null
at acti123.TestClassNG.logInToActiTime(TestClassNG.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInToActiTime -->
        <test-method signature="verifyTask()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="verifyTask" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "this.driver" is null
at acti123.TestClassNG.logInToActiTime(TestClassNG.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTask -->
        <test-method is-config="true" signature="logOutfromActiTime(org.testng.ITestResult)[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="logOutfromActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924010040" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutfromActiTime -->
        <test-method is-config="true" signature="logInToActiTime()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="logInToActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924010041" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInToActiTime -->
        <test-method signature="verifyTime()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="verifyTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.get(String)" because "this.driver" is null
at acti123.TestClassNG.logInToActiTime(TestClassNG.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTime -->
        <test-method is-config="true" signature="clearPOMObject()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="clearPOMObject" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924010045" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPOMObject -->
        <test-method is-config="true" signature="logOutfromActiTime(org.testng.ITestResult)[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="logOutfromActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924010045" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutfromActiTime -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:acti123.TestClassNG@5562c41e]" started-at="2022-03-10T20:23:30 IST" name="closeBrowser" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924010048" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- acti123.TestClassNG -->
      <class name="acti123.TestClassPrac">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="openBrowser" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="loginActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method signature="test1111()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="test1111" finished-at="2022-03-10T20:23:30 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1111 -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="loginActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method signature="test2222()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="test2222" finished-at="2022-03-10T20:23:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2222 -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method signature="test3333()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="test3333" finished-at="2022-03-10T20:23:30 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3333 -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="loginActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:acti123.TestClassPrac@bd4dc25]" started-at="2022-03-10T20:23:30 IST" name="closeBrowser" finished-at="2022-03-10T20:23:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- acti123.TestClassPrac -->
    </test> <!-- ChromeTest -->
    <test started-at="2022-03-10T20:23:30 IST" name="FireFoxTest" finished-at="2022-03-10T20:23:34 IST" duration-ms="4909">
      <class name="acti123.TestClassPrac">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="openBrowser" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="loginActiTime" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method signature="test1111()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="test1111" finished-at="2022-03-10T20:23:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1111 -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="loginActiTime" finished-at="2022-03-10T20:23:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method signature="test2222()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="test2222" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2222 -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="loginActiTime" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method signature="test3333()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="test3333" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3333 -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:acti123.TestClassPrac@2ea41516]" started-at="2022-03-10T20:23:33 IST" name="closeBrowser" finished-at="2022-03-10T20:23:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- acti123.TestClassPrac -->
      <class name="acti123.TestClassNG">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:30 IST" name="openBrowser" finished-at="2022-03-10T20:23:33 IST" duration-ms="3096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[FireFox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="objectOfMethods()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:33 IST" name="objectOfMethods" finished-at="2022-03-10T20:23:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectOfMethods -->
        <test-method is-config="true" signature="logInToActiTime()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:33 IST" name="logInToActiTime" finished-at="2022-03-10T20:23:34 IST" duration-ms="1400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInToActiTime -->
        <test-method signature="verifyTask()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="verifyTask" finished-at="2022-03-10T20:23:34 IST" duration-ms="312" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at acti123.TestClassNG.verifyTask(TestClassNG.java:117)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTask -->
        <test-method is-config="true" signature="logOutfromActiTime(org.testng.ITestResult)[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="logOutfromActiTime" finished-at="2022-03-10T20:23:34 IST" duration-ms="86" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTask status=FAILURE method=TestClassNG.verifyTask()[pri:0, instance:acti123.TestClassNG@3a44431a] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot format given Object as a Date]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot format given Object as a Date
at java.base/java.text.DateFormat.format(DateFormat.java:342)
at java.base/java.text.Format.format(Format.java:159)
at utils.Utility.captureScreenshot(Utility.java:50)
at acti123.TestClassNG.logOutfromActiTime(TestClassNG.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutfromActiTime -->
        <test-method is-config="true" signature="logInToActiTime()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="logInToActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924014978" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInToActiTime -->
        <test-method signature="verifyTime()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="verifyTime" finished-at="2022-03-10T20:23:34 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot format given Object as a Date]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot format given Object as a Date
at java.base/java.text.DateFormat.format(DateFormat.java:342)
at java.base/java.text.Format.format(Format.java:159)
at utils.Utility.captureScreenshot(Utility.java:50)
at acti123.TestClassNG.logOutfromActiTime(TestClassNG.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTime -->
        <test-method is-config="true" signature="logOutfromActiTime(org.testng.ITestResult)[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="logOutfromActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924014982" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutfromActiTime -->
        <test-method is-config="true" signature="clearPOMObject()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="clearPOMObject" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924014984" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPOMObject -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:acti123.TestClassNG@3a44431a]" started-at="2022-03-10T20:23:34 IST" name="closeBrowser" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924014985" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- acti123.TestClassNG -->
    </test> <!-- FireFoxTest -->
    <test started-at="2022-03-10T20:23:34 IST" name="EdgeTest" finished-at="2022-03-10T20:23:39 IST" duration-ms="4359">
      <class name="acti123.TestClassNG">
        <test-method is-config="true" signature="openBrowser(java.lang.String)[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:34 IST" name="openBrowser" finished-at="2022-03-10T20:23:37 IST" duration-ms="2903" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method is-config="true" signature="objectOfMethods()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:37 IST" name="objectOfMethods" finished-at="2022-03-10T20:23:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- objectOfMethods -->
        <test-method is-config="true" signature="logInToActiTime()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:37 IST" name="logInToActiTime" finished-at="2022-03-10T20:23:38 IST" duration-ms="499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInToActiTime -->
        <test-method signature="verifyTask()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:38 IST" name="verifyTask" finished-at="2022-03-10T20:23:39 IST" duration-ms="653" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at acti123.TestClassNG.verifyTask(TestClassNG.java:117)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTask -->
        <test-method is-config="true" signature="logOutfromActiTime(org.testng.ITestResult)[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:39 IST" name="logOutfromActiTime" finished-at="2022-03-10T20:23:39 IST" duration-ms="294" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTask status=FAILURE method=TestClassNG.verifyTask()[pri:0, instance:acti123.TestClassNG@ffaa6af] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot format given Object as a Date]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot format given Object as a Date
at java.base/java.text.DateFormat.format(DateFormat.java:342)
at java.base/java.text.Format.format(Format.java:159)
at utils.Utility.captureScreenshot(Utility.java:50)
at acti123.TestClassNG.logOutfromActiTime(TestClassNG.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutfromActiTime -->
        <test-method is-config="true" signature="logInToActiTime()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:39 IST" name="logInToActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924019349" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInToActiTime -->
        <test-method signature="verifyTime()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:39 IST" name="verifyTime" finished-at="2022-03-10T20:23:39 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Cannot format given Object as a Date]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Cannot format given Object as a Date
at java.base/java.text.DateFormat.format(DateFormat.java:342)
at java.base/java.text.Format.format(Format.java:159)
at utils.Utility.captureScreenshot(Utility.java:50)
at acti123.TestClassNG.logOutfromActiTime(TestClassNG.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.runAfterGroupsConfigurations(TestInvoker.java:676)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:660)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTime -->
        <test-method is-config="true" signature="clearPOMObject()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:39 IST" name="clearPOMObject" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924019352" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clearPOMObject -->
        <test-method is-config="true" signature="logOutfromActiTime(org.testng.ITestResult)[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:39 IST" name="logOutfromActiTime" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924019352" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutfromActiTime -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:acti123.TestClassNG@ffaa6af]" started-at="2022-03-10T20:23:39 IST" name="closeBrowser" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1646924019353" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- acti123.TestClassNG -->
      <class name="acti123.TestClassPrac">
        <test-method is-config="true" signature="openBrowser()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="openBrowser" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method signature="test1111()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="test1111" finished-at="2022-03-10T20:23:37 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1111 -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="loginActiTime" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="loginActiTime" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method signature="test2222()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="test2222" finished-at="2022-03-10T20:23:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2222 -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method is-config="true" signature="loginActiTime()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="loginActiTime" finished-at="2022-03-10T20:23:37 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginActiTime -->
        <test-method is-config="true" signature="logOutActiTime()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="logOutActiTime" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOutActiTime -->
        <test-method signature="test3333()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="test3333" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3333 -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:acti123.TestClassPrac@4803b726]" started-at="2022-03-10T20:23:37 IST" name="closeBrowser" finished-at="2022-03-10T20:23:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- acti123.TestClassPrac -->
    </test> <!-- EdgeTest -->
  </suite> <!-- Suite -->
</testng-results>
